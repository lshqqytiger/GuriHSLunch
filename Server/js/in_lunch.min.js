// lunch 

// Set up Prototype Function
Date.prototype.getWeek = (yyyy, mm, dd) => {
	if(yyyy.toString().lenth != 4 && mm.toString().length != 2 && dd.toString().length != 2) return console.error('Must be YYYY, MM, DD');
	const weekList = [ '일', '월', '화', '수', '목', '금', '토' ];
	const date = new Date(`${yyyy}-${mm}-${dd}`);
	return weekList[date.getDay()];
}

const date = new Date();
let month = date.getMonth()+1 < 10 ? "0" + String(date.getMonth()+1) : date.getMonth()+1;
let day = date.getDate() < 10 ? "0" + date.getDate() : date.getDate()
let week = date.getWeek(date.getFullYear(), month, day);
const SD_SCHUL_CODE = "7530054"
const ATPT_OFCDC_SC_CODE = "J10"
let MLSV_YMD = `${date.getFullYear()}${month}${day}`
let url = `https://open.neis.go.kr/hub/mealServiceDietInfo?Type=json&SD_SCHUL_CODE=${SD_SCHUL_CODE}&ATPT_OFCDC_SC_CODE=${ATPT_OFCDC_SC_CODE}&MLSV_YMD=${MLSV_YMD}`

$(document).ready(() => {loading(), getLunch()})

function getLunch(){
	$.get(url, drawResult).fail(onFail)
}

function drawResult(data){
	if(!data) return alert("NO DATA")
	$("#afterLunch").hide()
	$("#date").html(`${date.getFullYear()}년 ${month}월 ${day}일 ${week}요일<p>`)
	$("#month-select").val(month < 10 ? month.split("0")[1] : month)
	$("#day-select").val(day < 10 ? day.split("0")[1] : day)
	if(JSON.parse(data).RESULT){
		$("#loading").hide()
		$("#lunchList").html("급식 정보가 없습니다.<br></br>(휴일이거나 급식이 없는 날입니다.)")
		if(date.getMonth()+1 == Number(month) && date.getDate() == Number(day)) $("#date").html(`${date.getFullYear()}년 ${month}월 ${day}일 ${week}요일 (오늘)<p>`)
		return;
	}
	result = JSON.parse(data).mealServiceDietInfo[0].head[1].RESULT
	data = !JSON.parse(data).mealServiceDietInfo[1] ? JSON.parse(data).RESULT : JSON.parse(data).mealServiceDietInfo[1].row[0]
	if(result.CODE != "INFO-000") alert(result.MESSAGE)
	else {
		$("#loading").hide()
		$("#lunchList").html(data.DDISH_NM)
	}
	if(date.getMonth()+1 == Number(month) && date.getDate() == Number(day)){
		$("#date").html(`${date.getFullYear()}년 ${month}월 ${day}일 ${week}요일 (오늘)<p>`)
		if(date.getHours() >= 14){
			$("#afterLunch").show()
			$("#noticeAfterLunch").text(`오늘 (${date.getFullYear()}년 ${month}월 ${day}일) 점심 시간은 이미 지났습니다.`)
		}
	}
	return;
}

function reloadLunch(qmonth, qday, reload){
	if(!qmonth || !qday) return getLunch();
	else{
		loading()
		month = qmonth < 10 ? "0" + qmonth : qmonth;
		day = qday < 10 ? "0" + qday : qday;
		week = date.getWeek(date.getFullYear(), month, day);
		MLSV_YMD = `${date.getFullYear()}${month}${day}`
		url = `https://open.neis.go.kr/hub/mealServiceDietInfo?Type=json&SD_SCHUL_CODE=${SD_SCHUL_CODE}&ATPT_OFCDC_SC_CODE=${ATPT_OFCDC_SC_CODE}&MLSV_YMD=${MLSV_YMD}`;
	}
	return reload ? getLunch() : void 0;
}

function loading(){
	$("#loading").show()
	$("#lunchList").html("불러오는 중...")
}

function onFail(e){
	$("#date").html(`${date.getFullYear()}년 ${month}월 ${day}일 ${week}요일<p>`)
	$("#loading").hide()
	$("#lunchList").html("나이스API 서버가 응답하지 않습니다.<br></br>네트워크 환경이 불안정하거나 나이스API 서버가 점검 중일 수 있습니다.")
	$("#month-select").val(month < 10 ? month.split("0")[1] : month)
	$("#day-select").val(day < 10 ? day.split("0")[1] : day)
	return;
}

